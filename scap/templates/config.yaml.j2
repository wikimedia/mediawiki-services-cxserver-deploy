# Number of worker processes to spawn.
# Set to 0 to run everything in a single process without clustering.
# Use 'ncpu' to run as many workers as there are CPU units
num_workers: ncpu

# Log error messages and gracefully restart a worker if v8 reports that it
# uses more heap (note: not RSS) than this many mb.
worker_heap_limit_mb: 300

# The maximum interval in ms that can pass between two beat messages
# sent by each worker to the master before it is killed
worker_heartbeat_timeout: 7500

# Logger info
logging:
  level: warn
  name: cxserver
  streams:
    - host: <%= logstash_host %>
      port: <%= logstash_port %>
      type: gelf
    - level: info
      path: <%= log_file %>
      type: file

# Statsd metrics reporter
metrics:
  name: cxserver
  host: <%= metrics_host %>
  port: <%= metrics_port %>
  type: statsd

services:
  - name: cxserver
    module: src/app.js
    conf:
      cors: "*"
      port: <%= port %>
      user_agent: CXServer/WMF
      mwapi_req:
        body: "{{request.body}}"
        query: "{{ default(request.query, {}) }}"
        headers:
          host: "{{request.params.domain}}"
          user-agent: "{{user-agent}}"
        method: post
        uri: <%= mwapi_uri %>
      restbase_req:
        body: "{{request.body}}"
        headers: "{{request.headers}}"
        method: "{{request.method}}"
        query: "{{ default(request.query, {}) }}"
        uri: <%= restbase_uri %>/{{domain}}/v1/{+path}
      no_proxy_list:
        - eqiad.wmnet
        - codfw.wmnet
        - discovery.wmnet
      proxy: <%= proxy if proxy else '' %>
      jwt:
        algorithms:
          - HS256
        secret: "<%= jwt_token.replace("\"", "\\\"") %>"
      languages: src/config/languages.yaml
      mt:
        TestClient:
          languages: src/config/TestClient.yaml
        Apertium:
          api: "<%= apertium_uri %>"
          languages: src/config/Apertium.wikimedia.yaml
        LingoCloud:
          api: "<%= lingocloud_uri %>"
          key: "<%= lingocloud_key.replace("\"", "\\\"") %>"
          account: "<%= lingocloud_account %>"
          languages: src/config/LingoCloud.yaml
        Matxin:
          api: "<%= matxin_uri %>"
          key: "<%= matxin_key.replace("\"", "\\\"") %>"
          languages: src/config/Matxin.yaml
        Yandex:
          api: https://translate.yandex.net
          key: "<%= yandex_key.replace("\"", "\\\"") %>"
          languages: src/config/Yandex.yaml
        defaults: src/config/mt-defaults.wikimedia.yaml
      dictionary:
        JsonDict:
          languages: src/config/JsonDict.yaml
